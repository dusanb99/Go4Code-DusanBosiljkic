// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektniZadatak;

#nullable disable

namespace ProjektniZadatak.Migrations
{
    [DbContext(typeof(DrustvenaMrezaDbContext))]
    [Migration("20230917215558_DrugaMigracija")]
    partial class DrugaMigracija
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjektniZadatak.Controllers.Model.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("ProjektniZadatak.Models.Komentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ObjavaId")
                        .HasColumnType("int");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ObjavaId");

                    b.ToTable("Komentari");
                });

            modelBuilder.Entity("ProjektniZadatak.Models.Lajk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("KomentarId")
                        .HasColumnType("int");

                    b.Property<int>("ObjavaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KomentarId");

                    b.HasIndex("ObjavaId");

                    b.ToTable("Lajkovi");
                });

            modelBuilder.Entity("ProjektniZadatak.Models.Obavestenje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumSlanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<bool>("Procitano")
                        .HasColumnType("bit");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Obavestenja");
                });

            modelBuilder.Entity("ProjektniZadatak.Models.Objava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Objave");
                });

            modelBuilder.Entity("ProjektniZadatak.Models.Pratilac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PraceniKorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("PratilacId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PraceniKorisnikId");

                    b.HasIndex("PratilacId");

                    b.ToTable("Pratioci");
                });

            modelBuilder.Entity("ProjektniZadatak.Models.Komentar", b =>
                {
                    b.HasOne("ProjektniZadatak.Models.Objava", "Objava")
                        .WithMany("Komentari")
                        .HasForeignKey("ObjavaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objava");
                });

            modelBuilder.Entity("ProjektniZadatak.Models.Lajk", b =>
                {
                    b.HasOne("ProjektniZadatak.Models.Komentar", "Komentar")
                        .WithMany("KomentarLajkovi")
                        .HasForeignKey("KomentarId");

                    b.HasOne("ProjektniZadatak.Models.Objava", "PovezanaObjava")
                        .WithMany("Lajkovi")
                        .HasForeignKey("ObjavaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Komentar");

                    b.Navigation("PovezanaObjava");
                });

            modelBuilder.Entity("ProjektniZadatak.Models.Obavestenje", b =>
                {
                    b.HasOne("ProjektniZadatak.Controllers.Model.Korisnik", null)
                        .WithMany("Obavestenja")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjektniZadatak.Models.Objava", b =>
                {
                    b.HasOne("ProjektniZadatak.Controllers.Model.Korisnik", null)
                        .WithMany("Objave")
                        .HasForeignKey("KorisnikId");
                });

            modelBuilder.Entity("ProjektniZadatak.Models.Pratilac", b =>
                {
                    b.HasOne("ProjektniZadatak.Controllers.Model.Korisnik", "PraceniKorisnik")
                        .WithMany()
                        .HasForeignKey("PraceniKorisnikId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjektniZadatak.Controllers.Model.Korisnik", "PratilacKorisnika")
                        .WithMany("Pratioci")
                        .HasForeignKey("PratilacId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PraceniKorisnik");

                    b.Navigation("PratilacKorisnika");
                });

            modelBuilder.Entity("ProjektniZadatak.Controllers.Model.Korisnik", b =>
                {
                    b.Navigation("Obavestenja");

                    b.Navigation("Objave");

                    b.Navigation("Pratioci");
                });

            modelBuilder.Entity("ProjektniZadatak.Models.Komentar", b =>
                {
                    b.Navigation("KomentarLajkovi");
                });

            modelBuilder.Entity("ProjektniZadatak.Models.Objava", b =>
                {
                    b.Navigation("Komentari");

                    b.Navigation("Lajkovi");
                });
#pragma warning restore 612, 618
        }
    }
}
